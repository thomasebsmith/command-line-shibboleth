#!/usr/bin/env python3

import argparse
from getpass import getpass
import json
import requests
import sys

from .library import ShibbolethError, ShibbolethSession

def run():
    parser = argparse.ArgumentParser(
    description="Authenticate to U-M Shibboleth from the command line."
    )
    parser.add_argument(
    "cookie_file",
    default="cookies.tmp",
    nargs="?",
    help="a Netscape-style cookie storage file (e.g. one generated by cURL)"
    )
    args = parser.parse_args()
    cookie_file = args.cookie_file

    try:
        session = ShibbolethSession(cookie_file)
        if session.check_already_authenticated():
            sys.exit(0)

        duo_choices = None
        while not session.authenticated():
            uniqname = input("uniqname: ")
            password = getpass("password: ")
            try:
                duo_choices = session.authenticate(uniqname, password)
            except ShibbolethError as err:
                print(err)

        print(f"Duo two-factor login for {uniqname}")

        while not session.two_factor_authenticated():
            print("Select one of the following options:")
            for index, choice in enumerate(duo_choices):
                print(f" {index + 1}. {choice['description']}")
            print()

            choice = None
            while choice is None:
                choice = input(f"option: ")
                try:
                    choice = int(choice)
                    if choice < 1 or choice > len(duo_choices):
                        choice = None
                except ValueError:
                    choice = None

            choice = duo_choices[choice - 1]
            passcode = None
            if choice["factor"] == "Passcode":
                passcode = input(f"passcode: ")

            if not session.two_factor_authenticate(choice, passcode):
                print()

        session.save_cookies()

    except requests.exceptions.ConnectionError:
        print("Error connecting to Shibboleth server(s).", file=sys.stderr)
        sys.exit(1)
    except requests.exceptions.Timeout:
        print("A request timed out.", file=sys.stderr)
        sys.exit(1)
    except requests.exceptions.TooManyRedirects:
        print("Too many redirects.", file=sys.stderr)
        sys.exit(1)
    except ShibbolethError as e:
        print(e, file=sys.stderr)
        sys.exit(1)

if __name__ == "__main__":
    run()
